import json
import csv
import os
import random

# Концовка
end = [
    "Вы сошли с ума.",
    "??????????????",
    "Вы исправились"
]

# Персонажи (точнее их имена)
persons = [
    "Игрок",
    "Псих",
    "Психиатр",
    "Аптекарь",
    "Продавец",
    "Человек N"
]

# Вечно меняющееся название игры
game = [
    "Что?",
    "Не открывай больше.",
    "Удали этот файл.",
    "Убейте меня.",
    ":)"
]

chapter = 1

# Пользователь вводит имя
def EditName():
    # "\n" нам нужен, чтобы сделать пробел (для эстетики так скажем)
    name = input("\nВведите имя: ")
    persons[0] = name

# Хорошая концовка
def GoodEnding():
    print("[Хорошая концовка.]")
    exit()

# Плохая концовка
def BadEnding():
    print("[Плохая концовка.]")
    exit()

# Секретная концовка
def BrokenEnding():
    flag = 0
    while flag < 1000:
        print("????????")
        flag += 1
    exit()

def Choice(var):
    match var:
        case "1":
            return var
        case "2":
            return var
        case _:
            BrokenEnding()

# Сохранение
def SaveGame(name):
    global chapter 
    data = { 'chapter':chapter } 
    with open(f'{name}_game.json', 'w') as outfile: 
        json.dump(data, outfile) 
    print('Игра успешно сохранена.')

# Загрузка
def LoadGame(name):
    global chapter 
    if not os.path.exists(f'{name}_game.json'): 
        print(f'Сохранения для пользователя {name} не найдены.')
    else:
        with open(f'{name}_game.json') as json_file: 
            data = json.load(json_file) 
        chapter = data['chapter'] 
        print(f'Игра для пользователя {name} успешно загружена.')

# Удаление созранения
def DeleteSave(name):
    if not os.path.exists(f'{name}_game.json'): 
        print(f'Сохранения для пользователя {name} не найдены.')
    else:
        os.remove(f'{name}_game.json') 
        print(f'Сохранение для пользователя {name} успешно удалено.')

# Запись в CSV       
def WriteToCSV(name):
    global chapter 
    output_data = [[name, chapter]]
    with open('game_data.csv', 'a', newline ='') as file:
        writer = csv.writer(file)
        writer.writerows(output_data)
    print('Данные прошедшей игровей сессии успешно записаны в CSV.')

# Запрос на сохранение
def Save():
    answer = input("Хотите ли вы сохранится? y/n: ")
    if answer == "y":
        WriteToCSV(persons[0])
        SaveGame(persons[0])
        print("\n")
    else: 
        print("\n")
        return

# Первая часть
def FirstPart():
    print("[Первая глава.]\n")

    print("Был обычный осенний день. Пасмурно.\nШёл не сильный дождь, освежая ваше лицо.\nВы пошли к вашему психиатру на очередное обследование, которое вам уже начинает надоедать.")
    print("У попрога в психбольницу вы встречаете одного интересного человека, который окликает вас.")
    print(persons[1], ": Постой!")
    print("Вы смотрите на психбольного. У него белый халат и растрёпанные волосы.")
    print(persons[0], ": Простите?")
    print(persons[1], ": Вы здесь недавно? (Да - 1, Нет - 2)")
    answer = input(f"{ persons[0] }: ")

    if Choice(answer) == 2:
        print("Вы соврали психу, он это понял, но не подал виду.")
        print("Вы понимаете, что вы сделали это зря.")
        print("Вы понимаете, что совершили ошибку.")
        print("Вы понимаете.")
        print("Вы понимаете...")
    else:
        print("Вы решили не врать психопату и ответить честно. Он это заметил.")
        print("Вы чувствуете себя лучше.")
    print(persons[1], ": Не думал над тем, что тебя ждёт, посещая это место?")
    print(persons[0], ": М-м-м, нет, не задумывался.")
    print("И в правду, вы никогда не задумывались о том, что ждёт вас дальше, за исключением справки о том, что вы психбольной.")
    print("Послышался громкий звонок. Пациентов психбольницы позвали на ужин.")
    print(persons[1], ": Что же, мне пора идти, удачи!")
    print("Этот псих казался таким обычным. Как же он сюда попал?\nВы решили продолжить свой пуссть к кабинету психиатра")

    return

# Вопросы для теста у психиатра
questions = [
    ": Первый вопрос. Считаете ли вы себя нужным? (1 - Да, 2 - Нет)",
    ": Второй вопрос. Считаете ли вы себя человек с наклонносстями к суициду? (1 - Да, 2 - Нет)",
    ": Третий вопрос. Как часто вы думаете о смысле вашей жизни? (1 - Часто, 2 - Не часто)"
]

# Опрос у психиатра
def Test():
    for i in range(3):
        print(persons[2], questions[i])
        answer = input(f"{ persons[0] }: ")
        Choice(answer)
        print("Вы записали ответ.\n")

# Вторая часть
def SecondPart(flag):
    print("[Вторая глава.]\n")

    Save()    

    print("Вы проходите через узкие, но длинные коридоры")
    print("Вы проходите мимо 006 палаты, 007 палаты. Поднимаетесь на второй этаж и заходите в 042 кабинет")
    print("*Тук-тук*\nСтук раздался на весь длинный коридор.")
    print("***: Входите.")
    print("Вы вошли в белый, пожелтевший от времени кабинет, в котором сидел мужчина с седой бородой в белом халате.")
    print("Вы подошли к большому столу и присели на небольшую табуретку возле врача")
    print(persons[2], ": Здравствуйте, приготовились к сегодняшнему тесту?")
    print(persons[0], ": Конечно")
    print("Вы улыбнулись в ответ психиатру, будто тест это что-то само разумеющиеся.")
    print(persons[2], ": Отвечайте на вопросы честно, вы проходите его ради своего выздоровления. (1 - Постараюсь, 2 - Хорошо)")
    answer = input(f"{ persons[0] }: ")
    if Choice(answer) == 2:
        print("Вы наполнены решимостью но...")
        print("Вы сами не заметили, что солгали, ибо вы на самом деле не готовы отвечать правду.")
    else:
        print("Вы ответили совсем неуверенно, зато это правда, вы не знаете сможете ли вы ответить на вопросы правдой")
    print(persons[2], ": Что же, приступим.")    
    print("Кабинет психиатра наполнился глубочайшей тишиной, вам стало не по себе.\n")

    # Вызываем метод Test где будет содержаться сам тест (честно говоря, мне было лень придумывать что-то крутое, поэтому я сделал так)
    Test()

    print("\nЧто же, вы готовы к послеaднему вопросу? (1 - Да, 2 - Нет)")
    answer = input(f"{ persons[0] }: ")

    # Решил добавить ещё один вопрос, чтобы можно было подкосячить и пройти на плохую концовку
    if Choice(answer) == 2:
        print("Вас переполняет страх, из-за чего вы решаете солгать")
    else:
        print("Вас переполняет страх, но вы взяли себя в руки и уверенно ответили \"Да\"")

    print(persons[2], ": Готовы ли вы проходить курс лечения дальше? (1 - Да, 2 - Нет)")
    answer = input(f"{ persons[0] }: ")
    if Choice(answer) == 2:
         print("Вы ответили согласием.")
    else:
        print("Вы ответили отрицанием.")
        flag = True
    return

# Третья часть
def ThirdPart(flag):
    print("[Третья глава.]\n")

    Save()    

    if flag:
        print("Прошло несколько месяцев...")
        print("Вы октазались от лечения, из-за чего часто впадали в депрессию")
        print("Но вы нашли много знакомых за период восстановления.\nОни вам помогали чем могли.")
        print("В конце концов вы прожили до конца всего ужаса что с вами был.")
        print("Вы смогли подавить свои болячки и перестать чувствовать то, Что чувствуют душевно-больные люди.")
        GoodEnding()
    else:
        print("Прошло несколько месяцев...")
        print("Вы оказались на месте того пациента, которого видели в самом начале.")
        print("Теперь вы понимаете смысл того выссказывания, из самого первого с ним знакомства")
        print("Вы начали проживать в \"жёлтом\" доме, где жил тот самый псих.")
        print("Вы стали с ними друзьями.\nВас пичкали лекарствами, которые на деле не помогали, асводили с ума больше и больше.")
        print("В конце концов ваши галюцинации и панические атаки не закончились, а ваш новый друг в скором времени покинул заведение и направился неизвестно куда.")
        print("Либо умер, либо сбежал.")
        BadEnding()

    return

# Запрос на загрузку сохранения
def Load():
    answer = input("Хотите ли вы загрузить последнее сохранение? y/n: ")
    match answer:
        case "y":
            username = input("Введите имя пользователя: ")
            LoadGame(username)
            return False
        case _:
            return True    

# Запрос на удаление сохранения
def Delete():
    answer = input("Хотите ли вы удалить последнее сохранение? y/n: ")
    if answer == "y":
        username = input("Введите имя пользователя: ")
        DeleteSave(username)

# Обучение 
def Introduction():
    print("[Обучение.] \n")
    print("* У вас будет возможность выбора в некоторых диалогах -")
    print(persons[5], ": Приветик, хочешь поиграть в игру?")
    print("* У вас будет выбор указанный в скобочках после вопрос: (Да, Нет)\n* Для того, чтобы указать ответ, вы должны ввести индекс ответа (Да - 1, Нет - 2)")
    answer = int(input(f"{ persons[0] }: "))
    if Choice(answer) == 2: # :)
        print("ПОЧЕМУ???????????????????")
    print("\n")    
    return

# Основной метод
def Main():
    global chapter 

    # Название игры
    print(f"[{ game[random.randint(0, 4)] }]\n")

    # Флаг для концовки
    flag = True

    if Load() == True:
        # Небольшое руководство по игре
        answer = input("Хотели бы вы пройти обучение? y/n: ")

        # Можно ввести что угодно кроме "Y" и у нас просто завершится опрос
        match answer:
            case "y":
                Introduction()
            case "Y":
                Introduction()
        
        # Даём пользвателю ввести имя
        EditName()

    while True:
        match chapter:
            case 1:
                print("\n\n\n")
                FirstPart() # Первая глава
            case 2:
                print("\n\n\n")
                SecondPart(flag) # Вторая глава
            case 3:
                print("\n\n\n")
                ThirdPart(flag) # Третья глава
                break
            case _:
                exit() # меня не сломать >:)
        chapter += 1

# Вызываем главный метод
Main()
